{
  "reportTitle": "SetsBoard",
  "stats": {
    "suites": 9,
    "tests": 14,
    "passes": 14,
    "pending": 0,
    "failures": 0,
    "start": "2015-03-20T11:15:52.172Z",
    "end": "2015-03-20T11:15:52.190Z",
    "duration": 18,
    "testsRegistered": 14,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "Response",
        "suites": [
          {
            "title": "No payload",
            "suites": [],
            "tests": [
              {
                "title": "Should have a status of null",
                "fullTitle": "Response No payload Should have a status of null",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-literal\">null</span>, r.status);",
                "isRoot": false,
                "uuid": "9358d0ae-28ad-490a-93ff-b447f824bd92",
                "parentUUID": "b6a04ba2-0612-45bc-b8c3-5bc872c80b1f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/responses/responses.js",
            "uuid": "b6a04ba2-0612-45bc-b8c3-5bc872c80b1f",
            "fullFile": "/Users/justin/Workspace/SetsBoard/test/responses/responses.js",
            "passes": [
              "[Circular ~.suites.suites.0.suites.0.tests.0]"
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "Payload can support arrays, strings, numbers and booleans",
            "suites": [],
            "tests": [
              {
                "title": "response.payload.s should be \"string\"",
                "fullTitle": "Response Payload can support arrays, strings, numbers and booleans response.payload.s should be \"string\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'string'</span>, r.s);",
                "isRoot": false,
                "uuid": "bbdb0583-9ae3-4dd7-a8ed-81798cd4fbcc",
                "parentUUID": "e3b9187b-44af-49b8-9a2f-33b248238787",
                "skipped": false
              },
              {
                "title": "response.payload.n should be 1",
                "fullTitle": "Response Payload can support arrays, strings, numbers and booleans response.payload.n should be 1",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(1, r.n);",
                "isRoot": false,
                "uuid": "51c7c450-1f08-4a60-9808-b6432c658cb5",
                "parentUUID": "e3b9187b-44af-49b8-9a2f-33b248238787",
                "skipped": false
              },
              {
                "title": "response.payload.nZero should be 0",
                "fullTitle": "Response Payload can support arrays, strings, numbers and booleans response.payload.nZero should be 0",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(0, r.nZero);",
                "isRoot": false,
                "uuid": "57304425-f644-4f33-abc4-33f5898cf1cc",
                "parentUUID": "e3b9187b-44af-49b8-9a2f-33b248238787",
                "skipped": false
              },
              {
                "title": "resonse.payload.nNegative should be -1",
                "fullTitle": "Response Payload can support arrays, strings, numbers and booleans resonse.payload.nNegative should be -1",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(-1, r.nNegative);",
                "isRoot": false,
                "uuid": "d9e24ebb-620e-4cfa-b5fd-62c79ac19af8",
                "parentUUID": "e3b9187b-44af-49b8-9a2f-33b248238787",
                "skipped": false
              },
              {
                "title": "response.payload.b should be true",
                "fullTitle": "Response Payload can support arrays, strings, numbers and booleans response.payload.b should be true",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-literal\">true</span>, r.b);",
                "isRoot": false,
                "uuid": "1debf777-e623-488f-9cf9-0046b0d76c4a",
                "parentUUID": "e3b9187b-44af-49b8-9a2f-33b248238787",
                "skipped": false
              },
              {
                "title": "response.payload.a should be an array",
                "fullTitle": "Response Payload can support arrays, strings, numbers and booleans response.payload.a should be an array",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(arr, r.a);",
                "isRoot": false,
                "uuid": "2244b06b-83a7-49f5-9e93-1c6c2714d965",
                "parentUUID": "e3b9187b-44af-49b8-9a2f-33b248238787",
                "skipped": false
              },
              {
                "title": "response.payload.z, a and o should be undefined",
                "fullTitle": "Response Payload can support arrays, strings, numbers and booleans response.payload.z, a and o should be undefined",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-literal\">undefined</span>, r.z);\nassert.equal(<span class=\"hljs-literal\">undefined</span>, r.o);",
                "isRoot": false,
                "uuid": "ec7e4c39-44fe-49d4-bc91-b5744a3ba790",
                "parentUUID": "e3b9187b-44af-49b8-9a2f-33b248238787",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/responses/responses.js",
            "uuid": "e3b9187b-44af-49b8-9a2f-33b248238787",
            "fullFile": "/Users/justin/Workspace/SetsBoard/test/responses/responses.js",
            "passes": [
              "[Circular ~.suites.suites.0.suites.1.tests.0]",
              "[Circular ~.suites.suites.0.suites.1.tests.1]",
              "[Circular ~.suites.suites.0.suites.1.tests.2]",
              "[Circular ~.suites.suites.0.suites.1.tests.3]",
              "[Circular ~.suites.suites.0.suites.1.tests.4]",
              "[Circular ~.suites.suites.0.suites.1.tests.5]",
              "[Circular ~.suites.suites.0.suites.1.tests.6]"
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 7,
            "totalPasses": 7,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/responses/responses.js",
        "uuid": "cb25d3f9-d07a-4720-bb98-12162f627c87",
        "fullFile": "/Users/justin/Workspace/SetsBoard/test/responses/responses.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Success",
        "suites": [
          {
            "title": "No Payload",
            "suites": [],
            "tests": [
              {
                "title": "Should have a status of \"success\"",
                "fullTitle": "Success No Payload Should have a status of \"success\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'success'</span>, s.status);",
                "isRoot": false,
                "uuid": "4a1f6b09-3093-4e91-8b38-be80d6ebae28",
                "parentUUID": "86e7faae-68f7-4ebc-8db4-4541e5f4a6d2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/responses/responses.js",
            "uuid": "86e7faae-68f7-4ebc-8db4-4541e5f4a6d2",
            "fullFile": "/Users/justin/Workspace/SetsBoard/test/responses/responses.js",
            "passes": [
              "[Circular ~.suites.suites.1.suites.0.tests.0]"
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "With payload",
            "suites": [],
            "tests": [
              {
                "title": "Should have a status of \"success\"",
                "fullTitle": "Success With payload Should have a status of \"success\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'success'</span>,s.status);",
                "isRoot": false,
                "uuid": "b8f3b93d-64d5-4ed8-8bc7-f4d2eedd1d1d",
                "parentUUID": "ab3a7288-f7fc-49b8-9b9a-96bb46a83f8b",
                "skipped": false
              },
              {
                "title": "Should have the proper data",
                "fullTitle": "Success With payload Should have the proper data",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'string'</span>, s.s);\nassert.equal(<span class=\"hljs-number\">1</span>, s.n);\nassert.equal(<span class=\"hljs-literal\">true</span>, s.b);\nassert.equal(arr, s.a);",
                "isRoot": false,
                "uuid": "ef32e5d0-3891-45aa-b3ac-201c70fb725e",
                "parentUUID": "ab3a7288-f7fc-49b8-9b9a-96bb46a83f8b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/responses/responses.js",
            "uuid": "ab3a7288-f7fc-49b8-9b9a-96bb46a83f8b",
            "fullFile": "/Users/justin/Workspace/SetsBoard/test/responses/responses.js",
            "passes": [
              "[Circular ~.suites.suites.1.suites.1.tests.0]",
              "[Circular ~.suites.suites.1.suites.1.tests.1]"
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/responses/responses.js",
        "uuid": "3a435346-61f2-4596-b59f-e392dc35483b",
        "fullFile": "/Users/justin/Workspace/SetsBoard/test/responses/responses.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Error",
        "suites": [
          {
            "title": "No Message",
            "suites": [],
            "tests": [
              {
                "title": "Should have a status of \"error\"",
                "fullTitle": "Error No Message Should have a status of \"error\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'error'</span>, e.status);",
                "isRoot": false,
                "uuid": "66e454d5-3f50-4948-bad2-e2ca34bd0965",
                "parentUUID": "419e80f9-65a2-4e75-bebc-6e732fa7f8e9",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/responses/responses.js",
            "uuid": "419e80f9-65a2-4e75-bebc-6e732fa7f8e9",
            "fullFile": "/Users/justin/Workspace/SetsBoard/test/responses/responses.js",
            "passes": [
              "[Circular ~.suites.suites.2.suites.0.tests.0]"
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "With message",
            "suites": [],
            "tests": [
              {
                "title": "Should have a status of \"error\"",
                "fullTitle": "Error With message Should have a status of \"error\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'error'</span>, e.status);",
                "isRoot": false,
                "uuid": "7c5402e9-9085-461c-b8f7-9ecaea49ad86",
                "parentUUID": "da48880d-0ac8-4bbf-a79d-63bce227ff91",
                "skipped": false
              },
              {
                "title": "Should have a message of \"message\"",
                "fullTitle": "Error With message Should have a message of \"message\"",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "assert.equal(<span class=\"hljs-string\">'message'</span>, e.message);",
                "isRoot": false,
                "uuid": "689012d3-8eec-4daa-b4b7-e6aaf631369a",
                "parentUUID": "da48880d-0ac8-4bbf-a79d-63bce227ff91",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/responses/responses.js",
            "uuid": "da48880d-0ac8-4bbf-a79d-63bce227ff91",
            "fullFile": "/Users/justin/Workspace/SetsBoard/test/responses/responses.js",
            "passes": [
              "[Circular ~.suites.suites.2.suites.1.tests.0]",
              "[Circular ~.suites.suites.2.suites.1.tests.1]"
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/responses/responses.js",
        "uuid": "6d55a2f6-66a4-427c-ac19-9c8f883e6b09",
        "fullFile": "/Users/justin/Workspace/SetsBoard/test/responses/responses.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "a63faa4f-1408-4f85-b658-ed25b492f268",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "Should have a status of null",
      "fullTitle": "No payload Should have a status of null",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">null</span>, r.status);",
      "isRoot": false,
      "uuid": "6ca1d253-9575-4892-91c1-2e3d814a8cf5",
      "parentUUID": "b6a04ba2-0612-45bc-b8c3-5bc872c80b1f",
      "skipped": false
    },
    {
      "title": "response.payload.s should be \"string\"",
      "fullTitle": "Payload can support arrays, strings, numbers and booleans response.payload.s should be \"string\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'string'</span>, r.s);",
      "isRoot": false,
      "uuid": "d24bbde7-2923-43a0-b04a-f52d3afe28d7",
      "parentUUID": "e3b9187b-44af-49b8-9a2f-33b248238787",
      "skipped": false
    },
    {
      "title": "response.payload.n should be 1",
      "fullTitle": "Payload can support arrays, strings, numbers and booleans response.payload.n should be 1",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(1, r.n);",
      "isRoot": false,
      "uuid": "ebcf97a3-cc86-4651-a752-bb616e3e00b0",
      "parentUUID": "e3b9187b-44af-49b8-9a2f-33b248238787",
      "skipped": false
    },
    {
      "title": "response.payload.nZero should be 0",
      "fullTitle": "Payload can support arrays, strings, numbers and booleans response.payload.nZero should be 0",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(0, r.nZero);",
      "isRoot": false,
      "uuid": "f2719027-9423-497e-a033-e8d540878392",
      "parentUUID": "e3b9187b-44af-49b8-9a2f-33b248238787",
      "skipped": false
    },
    {
      "title": "resonse.payload.nNegative should be -1",
      "fullTitle": "Payload can support arrays, strings, numbers and booleans resonse.payload.nNegative should be -1",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(-1, r.nNegative);",
      "isRoot": false,
      "uuid": "b85e9870-a9c1-483d-99d7-16163f05bffa",
      "parentUUID": "e3b9187b-44af-49b8-9a2f-33b248238787",
      "skipped": false
    },
    {
      "title": "response.payload.b should be true",
      "fullTitle": "Payload can support arrays, strings, numbers and booleans response.payload.b should be true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">true</span>, r.b);",
      "isRoot": false,
      "uuid": "9ad0656b-2072-4d2b-bdd8-0574a59b0325",
      "parentUUID": "e3b9187b-44af-49b8-9a2f-33b248238787",
      "skipped": false
    },
    {
      "title": "response.payload.a should be an array",
      "fullTitle": "Payload can support arrays, strings, numbers and booleans response.payload.a should be an array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(arr, r.a);",
      "isRoot": false,
      "uuid": "cc205c25-5e67-45f1-9d84-e5b05a304fd0",
      "parentUUID": "e3b9187b-44af-49b8-9a2f-33b248238787",
      "skipped": false
    },
    {
      "title": "response.payload.z, a and o should be undefined",
      "fullTitle": "Payload can support arrays, strings, numbers and booleans response.payload.z, a and o should be undefined",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">undefined</span>, r.z);\nassert.equal(<span class=\"hljs-literal\">undefined</span>, r.o);",
      "isRoot": false,
      "uuid": "947f2172-2f37-4365-a476-cc06191c9dd8",
      "parentUUID": "e3b9187b-44af-49b8-9a2f-33b248238787",
      "skipped": false
    },
    {
      "title": "Should have a status of \"success\"",
      "fullTitle": "No Payload Should have a status of \"success\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'success'</span>, s.status);",
      "isRoot": false,
      "uuid": "00bd66f8-f478-43d3-bdbe-844565d15eb8",
      "parentUUID": "86e7faae-68f7-4ebc-8db4-4541e5f4a6d2",
      "skipped": false
    },
    {
      "title": "Should have a status of \"success\"",
      "fullTitle": "With payload Should have a status of \"success\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'success'</span>,s.status);",
      "isRoot": false,
      "uuid": "e19d0081-4d23-415e-be87-9f9d278d2c37",
      "parentUUID": "ab3a7288-f7fc-49b8-9b9a-96bb46a83f8b",
      "skipped": false
    },
    {
      "title": "Should have the proper data",
      "fullTitle": "With payload Should have the proper data",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'string'</span>, s.s);\nassert.equal(<span class=\"hljs-number\">1</span>, s.n);\nassert.equal(<span class=\"hljs-literal\">true</span>, s.b);\nassert.equal(arr, s.a);",
      "isRoot": false,
      "uuid": "5dd92f95-c446-4f49-8101-8532896916f8",
      "parentUUID": "ab3a7288-f7fc-49b8-9b9a-96bb46a83f8b",
      "skipped": false
    },
    {
      "title": "Should have a status of \"error\"",
      "fullTitle": "No Message Should have a status of \"error\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'error'</span>, e.status);",
      "isRoot": false,
      "uuid": "dc3d7380-defe-446d-a714-046cc4035e59",
      "parentUUID": "419e80f9-65a2-4e75-bebc-6e732fa7f8e9",
      "skipped": false
    },
    {
      "title": "Should have a status of \"error\"",
      "fullTitle": "With message Should have a status of \"error\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'error'</span>, e.status);",
      "isRoot": false,
      "uuid": "1183d24f-4ddc-4d31-9e19-b776141e7bfb",
      "parentUUID": "da48880d-0ac8-4bbf-a79d-63bce227ff91",
      "skipped": false
    },
    {
      "title": "Should have a message of \"message\"",
      "fullTitle": "With message Should have a message of \"message\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'message'</span>, e.message);",
      "isRoot": false,
      "uuid": "a76432aa-c535-485c-9456-b9713d69e6d4",
      "parentUUID": "da48880d-0ac8-4bbf-a79d-63bce227ff91",
      "skipped": false
    }
  ],
  "allHooks": [],
  "allPending": [],
  "allPasses": [
    {
      "title": "Should have a status of null",
      "fullTitle": "No payload Should have a status of null",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">null</span>, r.status);",
      "isRoot": false,
      "uuid": "f68ea37b-437e-407a-ba2e-dff8039dddf8",
      "parentUUID": "b6a04ba2-0612-45bc-b8c3-5bc872c80b1f",
      "skipped": false
    },
    {
      "title": "response.payload.s should be \"string\"",
      "fullTitle": "Payload can support arrays, strings, numbers and booleans response.payload.s should be \"string\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'string'</span>, r.s);",
      "isRoot": false,
      "uuid": "9d5cd857-f7e4-4860-a771-bed7a8ce6a84",
      "parentUUID": "e3b9187b-44af-49b8-9a2f-33b248238787",
      "skipped": false
    },
    {
      "title": "response.payload.n should be 1",
      "fullTitle": "Payload can support arrays, strings, numbers and booleans response.payload.n should be 1",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(1, r.n);",
      "isRoot": false,
      "uuid": "eade098a-8d02-449b-a011-5de7d0e12299",
      "parentUUID": "e3b9187b-44af-49b8-9a2f-33b248238787",
      "skipped": false
    },
    {
      "title": "response.payload.nZero should be 0",
      "fullTitle": "Payload can support arrays, strings, numbers and booleans response.payload.nZero should be 0",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(0, r.nZero);",
      "isRoot": false,
      "uuid": "517056c9-80bc-4e82-b633-676707126438",
      "parentUUID": "e3b9187b-44af-49b8-9a2f-33b248238787",
      "skipped": false
    },
    {
      "title": "resonse.payload.nNegative should be -1",
      "fullTitle": "Payload can support arrays, strings, numbers and booleans resonse.payload.nNegative should be -1",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(-1, r.nNegative);",
      "isRoot": false,
      "uuid": "2e723619-582b-471a-a663-a5e89869eeb3",
      "parentUUID": "e3b9187b-44af-49b8-9a2f-33b248238787",
      "skipped": false
    },
    {
      "title": "response.payload.b should be true",
      "fullTitle": "Payload can support arrays, strings, numbers and booleans response.payload.b should be true",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">true</span>, r.b);",
      "isRoot": false,
      "uuid": "506383ba-6077-4f6b-9ab6-a0bf814874c3",
      "parentUUID": "e3b9187b-44af-49b8-9a2f-33b248238787",
      "skipped": false
    },
    {
      "title": "response.payload.a should be an array",
      "fullTitle": "Payload can support arrays, strings, numbers and booleans response.payload.a should be an array",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(arr, r.a);",
      "isRoot": false,
      "uuid": "d04fb6a4-5089-4d40-8a07-997d8f102349",
      "parentUUID": "e3b9187b-44af-49b8-9a2f-33b248238787",
      "skipped": false
    },
    {
      "title": "response.payload.z, a and o should be undefined",
      "fullTitle": "Payload can support arrays, strings, numbers and booleans response.payload.z, a and o should be undefined",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-literal\">undefined</span>, r.z);\nassert.equal(<span class=\"hljs-literal\">undefined</span>, r.o);",
      "isRoot": false,
      "uuid": "eeea9b42-2acd-4231-b1de-2c4914806fe5",
      "parentUUID": "e3b9187b-44af-49b8-9a2f-33b248238787",
      "skipped": false
    },
    {
      "title": "Should have a status of \"success\"",
      "fullTitle": "No Payload Should have a status of \"success\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'success'</span>, s.status);",
      "isRoot": false,
      "uuid": "af055436-ede8-415d-a91c-0704753a5a4a",
      "parentUUID": "86e7faae-68f7-4ebc-8db4-4541e5f4a6d2",
      "skipped": false
    },
    {
      "title": "Should have a status of \"success\"",
      "fullTitle": "With payload Should have a status of \"success\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'success'</span>,s.status);",
      "isRoot": false,
      "uuid": "52865066-eb04-4393-b4b7-186bf4196313",
      "parentUUID": "ab3a7288-f7fc-49b8-9b9a-96bb46a83f8b",
      "skipped": false
    },
    {
      "title": "Should have the proper data",
      "fullTitle": "With payload Should have the proper data",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'string'</span>, s.s);\nassert.equal(<span class=\"hljs-number\">1</span>, s.n);\nassert.equal(<span class=\"hljs-literal\">true</span>, s.b);\nassert.equal(arr, s.a);",
      "isRoot": false,
      "uuid": "be281527-c6ec-4b83-a65c-61ff3243caeb",
      "parentUUID": "ab3a7288-f7fc-49b8-9b9a-96bb46a83f8b",
      "skipped": false
    },
    {
      "title": "Should have a status of \"error\"",
      "fullTitle": "No Message Should have a status of \"error\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'error'</span>, e.status);",
      "isRoot": false,
      "uuid": "a1a33cc7-0bb7-4002-9c57-5e0323f22195",
      "parentUUID": "419e80f9-65a2-4e75-bebc-6e732fa7f8e9",
      "skipped": false
    },
    {
      "title": "Should have a status of \"error\"",
      "fullTitle": "With message Should have a status of \"error\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'error'</span>, e.status);",
      "isRoot": false,
      "uuid": "ac8de8f3-0800-45f6-8db7-3d69ce06e764",
      "parentUUID": "da48880d-0ac8-4bbf-a79d-63bce227ff91",
      "skipped": false
    },
    {
      "title": "Should have a message of \"message\"",
      "fullTitle": "With message Should have a message of \"message\"",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "assert.equal(<span class=\"hljs-string\">'message'</span>, e.message);",
      "isRoot": false,
      "uuid": "ca2d59f4-e573-4aa7-9b16-f0ec68d9715a",
      "parentUUID": "da48880d-0ac8-4bbf-a79d-63bce227ff91",
      "skipped": false
    }
  ],
  "allFailures": []
}